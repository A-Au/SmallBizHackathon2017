extends layout

block content
  html.
  <div class="no-boot">
  <div id="successNotification" style="display: none">
  Card Charged Succesfully!!
  </div>

  <form id="payment-form" action="#" onsubmit="return paymentFormSubmit()">

  <h2>Node.js example</h2>

  <label>Choose your Golden Gate replica</label>
  <select id="product_id" name="product_id">
  <!--<option value="001">$1 Paper Origami 1:10,000 scale model (11 inch) </option>
  <option value="002">$49 Plastic 1:5000 scale model (22 inch)</option>
  <option value="003">$5000 Metal &amp; Concrete 1:1000 scale replica (9 feet)</option>-->
  <option value="001">$1 Paper Origami 1:10,000 scale model (11 inch) </option>
  <option value="002">$49 Plastic 1:5000 scale model (22 inch)</option>
  <option value="003">$5000 Metal &amp; Concrete 1:1000 scale replica (9 feet)</option>
  </select>

  <label>Tax</label>
  <p id="tax"></p>

  <label>Total</label>
  <p id="product_total"></p>


  <label>Name</label>
  <input type="text" id="name" name="name"  placeholder="Name"/>

  <label>Email</label>
  <input type="email" id="email" name="email"  placeholder="Email"/>

  <h3> Shipping Address </h3>

  <label>Street</label>
  <input type="text" id="street_address_1" name="street_address_1"  placeholder="Address Line 1"/>


  <label>Street</label>
  <input type="text" id="street_address_2" name="street_address_2"  placeholder="Address Line 2"/>

  <label>City</label>
  <input type="text" id="city" name="city"  placeholder="City"/>


  <label>State</label>
  <select id="state" name="state">
  <option value=""></option>
  <option value="AL">Alabama</option>
  <option value="AK">Alaska</option>
  <option value="AZ">Arizona</option>
  <option value="AR">Arkansas</option>
  <option value="CA">California</option>
  <option value="CO">Colorado</option>
  <option value="CT">Connecticut</option>
  <option value="DE">Delaware</option>
  <option value="DC">District of Columbia</option>
  <option value="FL">Florida</option>
  <option value="GA">Georgia</option>
  <option value="HI">Hawaii</option>
  <option value="ID">Idaho</option>
  <option value="IL">Illinois</option>
  <option value="IN">Indiana</option>
  <option value="IA">Iowa</option>
  <option value="KS">Kansas</option>
  <option value="KY">Kentucky</option>
  <option value="LA">Louisiana</option>
  <option value="ME">Maine</option>
  <option value="MD">Maryland</option>
  <option value="MA">Massachusetts</option>
  <option value="MI">Michigan</option>
  <option value="MN">Minnesota</option>
  <option value="MS">Mississippi</option>
  <option value="MO">Missouri</option>
  <option value="MT">Montana</option>
  <option value="NE">Nebraska</option>
  <option value="NV">Nevada</option>
  <option value="NH">New Hampshire</option>
  <option value="NJ">New Jersey</option>
  <option value="NM">New Mexico</option>
  <option value="NY">New York</option>
  <option value="NC">North Carolina</option>
  <option value="ND">North Dakota</option>
  <option value="OH">Ohio</option>
  <option value="OK">Oklahoma</option>
  <option value="OR">Oregon</option>
  <option value="PA">Pennsylvania</option>
  <option value="RI">Rhode Island</option>
  <option value="SC">South Carolina</option>
  <option value="SD">South Dakota</option>
  <option value="TN">Tennessee</option>
  <option value="TX">Texas</option>
  <option value="UT">Utah</option>
  <option value="VT">Vermont</option>
  <option value="VA">Virginia</option>
  <option value="WA">Washington</option>
  <option value="WV">West Virginia</option>
  <option value="WI">Wisconsin</option>
  <option value="WY">Wyoming</option>
  </select>

  <label>Zip</label>
  <input type="text" id="zip" name="zip"  placeholder="Zip"/>

  <div id="card-errors">

  </div>

  <div>
  <label>Card Number</label>
  <div id="sq-card-number"></div>
  </div>

  <div>
  <label>CVV</label>
  <div  id="sq-cvv"></div>
  </div>

  <div>
  <label>Expiration Date</label>
  <div  id="sq-expiration-date"></div>
  </div>

  <div>
  <label>Postal Code</label>
  <div  id="sq-postal-code"></div>
  </div>

  <div>
  <input type="submit" id="submit" value="Buy Now" class="btn btn-primary">
  </div>

  </form>

  <div id="sq-walletbox">
  <h2>Pay with a Digital Wallet</h2>
  <div id="sq-apple-pay-label" class="wallet-not-enabled">Apple Pay for Web not enabled</div>
  <!-- Placholder for Apple Pay for Web button -->
  <button id="sq-apple-pay" class="button-apple-pay"></button>

  <div id="sq-masterpass-label" class="wallet-not-enabled">Masterpass not enabled</div>
  <!-- Placholder for Masterpass button -->
  <button id="sq-masterpass" class="button-masterpass"></button>
  </div>
  </div>

  script(type='text/javascript').
    var tax;
    var cardNonce;
    var paymentForm = new SqPaymentForm({
      applicationId: '#{square_application_id}',
      locationId: '#{square_location_id}',
      inputClass: 'sq-input',
      inputStyles: [
          {
            fontSize: '14px',
            padding: '7px 12px',
            backgroundColor: "transparent"
          }
        ],
      cardNumber: {
        elementId: 'sq-card-number',
        placeholder: '0000 0000 0000 0000'    
      },
      cvv: {
        elementId: 'sq-cvv',
        placeholder: 'CVV'
      },
      expirationDate: {
        elementId: 'sq-expiration-date',
        placeholder: 'MM/YY'
      },
      postalCode: {
        elementId: 'sq-postal-code',
        placeholder: '94110'
      },

      // Initialize Apple Pay placeholder ID
      applePay: {
        elementId: 'sq-apple-pay'
      },

      // Initialize Masterpass placeholder ID
      masterpass: {
        elementId: 'sq-masterpass'
      },

      callbacks: {
        methodsSupported: function (methods) {

          var applePayBtn = document.getElementById('sq-apple-pay');
          var applePayLabel = document.getElementById('sq-apple-pay-label');
          var masterpassBtn = document.getElementById('sq-masterpass');
          var masterpassLabel = document.getElementById('sq-masterpass-label');

          // Only show the button if Apple Pay for Web is enabled
          // Otherwise, display the wallet not enabled message.
          if (methods.applePay === true) {
            applePayBtn.style.display = 'inline-block';
            applePayLabel.style.display = 'none' ;
          }
          // Only show the button if Masterpass is enabled
          // Otherwise, display the wallet not enabled message.
          if (methods.masterpass === true) {
            masterpassBtn.style.display = 'inline-block';
            masterpassLabel.style.display = 'none';
          }
        },
        cardNonceResponseReceived: function(errors, nonce, cardData) {
          if (errors){
            var error_html = ""
            for (var i =0; i < errors.length; i++){
              error_html += "<li> " + errors[i].message + " </li>";
            }
            document.getElementById("card-errors").innerHTML = error_html;
            document.getElementById('submit').disabled = false;
          }else{
            document.getElementById("card-errors").innerHTML = "";
            chargeCardWithNonce(nonce);
          }
          
          
        },
        unsupportedBrowserDetected: function() {
          // Alert the buyer
        },
        createPaymentRequest: function () {
          return {
            requestShippingAddress: false,
            currencyCode: "USD",
            countryCode: "US",

            total: {
              label: "#{square_location_name}",
              amount: "1.01",
              pending: false,
            },

            lineItems: [
              {
                label: "Subtotal",
                amount: "1.00",
                pending: false,
              },
              {
                label: "Tax",
                amount: "0.01",
                pending: false,
              }
            ]
          };
        },
      }
    });

    function getCostByProductId(id){
      return {
        "001": 1,
        "002": 49,
        "003": 5000
      }[id];
    }

    function updateTaxAndProductTotal(){
        var productCost = getCostByProductId(document.getElementById('product_id').value);
        document.getElementById("tax").innerHTML = tax*100+" %";
        document.getElementById("product_total").innerHTML = "$"+(productCost*(1+tax)).toFixed(2);
    }

    function updateTotalProductCost(){
      navigator.geolocation.getCurrentPosition(position => {
      var latitude = position.coords.latitude;
      var longitude = position.coords.longitude;
      
      if (typeof tax === "undefined"){
          var xhr = new XMLHttpRequest();
          var params = {
          	latitude: latitude,
          	longitude: longitude
          };
          params = `latitude=${encodeURIComponent(latitude)}`+
                   `&longitude=${encodeURIComponent(longitude)}`;

          xhr.open("get", "/tax?"+params, true);

          xhr.onreadystatechange = function() {
            if (xhr.readyState == XMLHttpRequest.DONE) {
                var res = JSON.parse(xhr.response);
                tax = res.tax;
                updateTaxAndProductTotal();
            }
          }

          xhr.send(params);
        } else{
          updateTaxAndProductTotal();
        }
    }, err => {
      console.log(err);
    });
    }
    updateTotalProductCost();

    // build payment form after DOM load
    document.addEventListener('page:change', function(){
      console.log('dom loaded')
      paymentForm.build();
    });

    document.getElementById("product_id").onchange = updateTotalProductCost;

    var paymentFormSubmit = function(){
      console.log('submit clicked');
      document.getElementById('submit').disabled = true;
      paymentForm.requestCardNonce();
      return false;
    }

    var chargeCardWithNonce = function(nonce) {
      var product_id = document.getElementById('product_id').value;
      var name = document.getElementById('name').value;
      var email = document.getElementById('email').value;
      var street_address_1 = document.getElementById('street_address_1').value;
      var street_address_2 = document.getElementById('street_address_2').value;
      var city = document.getElementById('city').value;
      var state = document.getElementById('state').value;
      var zip = document.getElementById('zip').value;
      
      var http = new XMLHttpRequest();
      var url = "/charges/charge_card";
      var params = "location_id=" + '#{square_location_id}'
      + "&product_id=" + product_id 
      + "&name=" + name 
      + "&email=" + email 
      + "&nonce=" + nonce
      + "&street_address_1=" + street_address_1
      + "&street_address_2=" + street_address_2
      + "&city=" + city
      + "&state=" + state
      + "&zip=" + zip;

      http.open("POST", url, true);

      //Send the proper header information along with the request
      http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
      http.setRequestHeader("X-CSRF-Token", "<%= form_authenticity_token %>");

      http.onreadystatechange = function() {//Call a function when the state changes.
          if(http.readyState == 4 && http.status == 200) {
            var data = JSON.parse(http.responseText)
            if (data.status == 200) {
              document.getElementById("successNotification").style.display = "block";
              document.getElementById("payment-form").style.display = "none";
              window.scrollTo(0, 0);
            }else if (data.status == 400){
              var error_html = ""
              for (var i =0; i < data.errors.length; i++){
                error_html += "<li> " + data.errors[i].detail + " </li>";
              }
              document.getElementById("card-errors").innerHTML = error_html;
              document.getElementById('submit').disabled = false;
            }
          }
      }
      http.send(params);
    }
